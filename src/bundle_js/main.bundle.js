"use strict";!function(){function i(n){return new Promise(function(e,t){n.onsuccess=function(){e(n.result)},n.onerror=function(){t(n.error)}})}function a(n,r,o){var a,e=new Promise(function(e,t){i(a=n[r].apply(n,o)).then(e,t)});return e.request=a,e}function e(e,n,t){t.forEach(function(t){Object.defineProperty(e.prototype,t,{get:function(){return this[n][t]},set:function(e){this[n][t]=e}})})}function t(t,n,r,e){e.forEach(function(e){e in r.prototype&&(t.prototype[e]=function(){return a(this[n],e,arguments)})})}function n(t,n,r,e){e.forEach(function(e){e in r.prototype&&(t.prototype[e]=function(){return this[n][e].apply(this[n],arguments)})})}function r(e,r,t,n){n.forEach(function(n){n in t.prototype&&(e.prototype[n]=function(){return e=this[r],(t=a(e,n,arguments)).then(function(e){if(e)return new s(e,t.request)});var e,t})})}function o(e){this._index=e}function s(e,t){this._cursor=e,this._request=t}function u(e){this._store=e}function c(n){this._tx=n,this.complete=new Promise(function(e,t){n.oncomplete=function(){e()},n.onerror=function(){t(n.error)},n.onabort=function(){t(n.error)}})}function l(e,t,n){this._db=e,this.oldVersion=t,this.transaction=new c(n)}function f(e){this._db=e}e(o,"_index",["name","keyPath","multiEntry","unique"]),t(o,"_index",IDBIndex,["get","getKey","getAll","getAllKeys","count"]),r(o,"_index",IDBIndex,["openCursor","openKeyCursor"]),e(s,"_cursor",["direction","key","primaryKey","value"]),t(s,"_cursor",IDBCursor,["update","delete"]),["advance","continue","continuePrimaryKey"].forEach(function(n){n in IDBCursor.prototype&&(s.prototype[n]=function(){var t=this,e=arguments;return Promise.resolve().then(function(){return t._cursor[n].apply(t._cursor,e),i(t._request).then(function(e){if(e)return new s(e,t._request)})})})}),u.prototype.createIndex=function(){return new o(this._store.createIndex.apply(this._store,arguments))},u.prototype.index=function(){return new o(this._store.index.apply(this._store,arguments))},e(u,"_store",["name","keyPath","indexNames","autoIncrement"]),t(u,"_store",IDBObjectStore,["put","add","delete","clear","get","getAll","getKey","getAllKeys","count"]),r(u,"_store",IDBObjectStore,["openCursor","openKeyCursor"]),n(u,"_store",IDBObjectStore,["deleteIndex"]),c.prototype.objectStore=function(){return new u(this._tx.objectStore.apply(this._tx,arguments))},e(c,"_tx",["objectStoreNames","mode"]),n(c,"_tx",IDBTransaction,["abort"]),l.prototype.createObjectStore=function(){return new u(this._db.createObjectStore.apply(this._db,arguments))},e(l,"_db",["name","version","objectStoreNames"]),n(l,"_db",IDBDatabase,["deleteObjectStore","close"]),f.prototype.transaction=function(){return new c(this._db.transaction.apply(this._db,arguments))},e(f,"_db",["name","version","objectStoreNames"]),n(f,"_db",IDBDatabase,["close"]),["openCursor","openKeyCursor"].forEach(function(a){[u,o].forEach(function(e){a in e.prototype&&(e.prototype[a.replace("open","iterate")]=function(){var e,t=(e=arguments,Array.prototype.slice.call(e)),n=t[t.length-1],r=this._store||this._index,o=r[a].apply(r,t.slice(0,-1));o.onsuccess=function(){n(o.result)}})})}),[o,u].forEach(function(e){e.prototype.getAll||(e.prototype.getAll=function(e,n){var r=this,o=[];return new Promise(function(t){r.iterateCursor(e,function(e){e?(o.push(e.value),void 0===n||o.length!=n?e.continue():t(o)):t(o)})})})});var d={open:function(e,t,n){var r=a(indexedDB,"open",[e,t]),o=r.request;return o&&(o.onupgradeneeded=function(e){n&&n(new l(o.result,e.oldVersion,o.transaction))}),r.then(function(e){return new f(e)})},delete:function(e){return a(indexedDB,"deleteDatabase",[e])}};"undefined"!=typeof module?(module.exports=d,module.exports.default=module.exports):self.idb=d}();var _createClass=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var map,DBHelper=function(){function i(){_classCallCheck(this,i)}return _createClass(i,null,[{key:"openIdb",value:function(){return idb.open("db",2,function(e){switch(e.oldVersion){case 0:e.createObjectStore("restaurants-store",{keyPath:"id"});case 1:e.createObjectStore("reviews-store",{keyPath:"id"}).createIndex("by-restaurant","restaurant_id")}})}},{key:"getCachedRestaurants",value:function(){return i.openIdb().then(function(e){if(e)return e.transaction("restaurants-store").objectStore("restaurants-store").getAll()})}},{key:"getCachedReviews",value:function(t){return i.openIdb().then(function(e){if(e)return e.transaction("reviews-store").objectStore("reviews-store").index("by-restaurant").getAll(t)})}},{key:"fetchRestaurants",value:function(t){i.getCachedRestaurants().then(function(e){if(0<e.length)return t(null,e)}),fetch(i.DATABASE_URL+"restaurants").then(function(e){return e.json()}).then(function(n){return i.openIdb().then(function(e){if(e){var t=e.transaction("restaurants-store","readwrite").objectStore("restaurants-store");n.forEach(function(e){t.put(e)})}}),t(null,n)}).catch(function(e){return t(e,null)})}},{key:"fetchReviews",value:function(e,t){i.getCachedReviews(e).then(function(e){if(0<e.length)return t(null,e.reverse())}),fetch(i.DATABASE_URL+"reviews/?restaurant_id="+e).then(function(e){return e.json()}).then(function(n){return i.openIdb().then(function(e){if(e){var t=e.transaction("reviews-store","readwrite").objectStore("reviews-store");n.forEach(function(e){t.put(e)})}}),t(null,n.reverse())}).catch(function(e){return t(e,null)})}},{key:"fetchRestaurantById",value:function(r,o){i.fetchRestaurants(function(e,t){if(e)o(e,null);else{var n=t.find(function(e){return e.id==r});n?o(null,n):o("Restaurant does not exist",null)}})}},{key:"fetchRestaurantByCuisine",value:function(r,o){i.fetchRestaurants(function(e,t){if(e)o(e,null);else{var n=t.filter(function(e){return e.cuisine_type==r});o(null,n)}})}},{key:"fetchRestaurantByNeighborhood",value:function(r,o){i.fetchRestaurants(function(e,t){if(e)o(e,null);else{var n=t.filter(function(e){return e.neighborhood==r});o(null,n)}})}},{key:"fetchRestaurantByCuisineAndNeighborhood",value:function(r,o,a){i.fetchRestaurants(function(e,t){if(e)a(e,null);else{var n=t;"all"!=r&&(n=n.filter(function(e){return e.cuisine_type==r})),"all"!=o&&(n=n.filter(function(e){return e.neighborhood==o})),a(null,n)}})}},{key:"fetchNeighborhoods",value:function(o){i.fetchRestaurants(function(e,n){if(e)o(e,null);else{var r=n.map(function(e,t){return n[t].neighborhood}),t=r.filter(function(e,t){return r.indexOf(e)==t});o(null,t)}})}},{key:"fetchCuisines",value:function(o){i.fetchRestaurants(function(e,n){if(e)o(e,null);else{var r=n.map(function(e,t){return n[t].cuisine_type}),t=r.filter(function(e,t){return r.indexOf(e)==t});o(null,t)}})}},{key:"urlForRestaurant",value:function(e){return"./restaurant.html?id="+e.id}},{key:"imageUrlForRestaurant",value:function(e){return"/img/"+e.photograph}},{key:"mapMarkerForRestaurant",value:function(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:i.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}},{key:"changeFavoriteStateForRestaurant",value:function(n,r,t){fetch("http://localhost:1337/restaurants/"+n+"/?is_favorite="+r,{method:"PUT"}).then(function(e){i.openIdb().then(function(e){var t=e.transaction("restaurants-store","readwrite").objectStore("restaurants-store");t.get(n).then(function(e){e.is_favorite=r,t.put(e)})}),t(null,"favorite status updated successfully")}).catch(function(e){t("failed to update favorite status",null)})}},{key:"addReview",value:function(e){if(navigator.onLine){var t={restaurant_id:parseInt(e.restaurantId),name:e.name,rating:parseInt(e.rating),comments:e.comments,createdAt:parseInt(e.createdAt)};fetch("http://localhost:1337/reviews",{method:"POST",body:JSON.stringify(t),headers:new Headers({"Content-Type":"application/json"})}).then(function(e){console.log("review added successfully to the server")}).catch(function(e){console.log(e)})}else i.sendWhenOnline(e)}},{key:"sendWhenOnline",value:function(e){localStorage.setItem("offlineReviewData",JSON.stringify(e)),window.addEventListener("online",function(e){var t=JSON.parse(localStorage.getItem("offlineReviewData"));null!==t&&(i.addReview(t),localStorage.removeItem("offlineReviewData"))})}},{key:"DATABASE_URL",get:function(){return"http://localhost:1337/"}}]),i}(),restaurants=void 0,neighborhoods=void 0,cuisines=void 0,markers=[];window.addEventListener("offline",function(e){window.siiimpleToast.alert("No Internet Connection!")}),document.addEventListener("DOMContentLoaded",function(e){initMap(),fetchNeighborhoods(),fetchCuisines()});var fetchNeighborhoods=function(){DBHelper.fetchNeighborhoods(function(e,t){e?console.error(e):(self.neighborhoods=t,fillNeighborhoodsHTML())})},fillNeighborhoodsHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.neighborhoods,n=document.getElementById("neighborhoods-select");n.innerHTML="";var t=document.createElement("option");t.innerHTML="All Neighborhoods",t.value="all",n.append(t),e.forEach(function(e){var t=document.createElement("option");t.innerHTML=e,t.value=e,n.append(t)})},fetchCuisines=function(){DBHelper.fetchCuisines(function(e,t){e?console.error(e):(self.cuisines=t,fillCuisinesHTML())})},fillCuisinesHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.cuisines,n=document.getElementById("cuisines-select");n.innerHTML="";var t=document.createElement("option");t.innerHTML="All Cuisines",t.value="all",n.append(t),e.forEach(function(e){var t=document.createElement("option");t.innerHTML=e,t.value=e,n.append(t)})},initMap=function(){self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1}),updateRestaurants()},updateRestaurants=function(){var e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),n=e.selectedIndex,r=t.selectedIndex,o=e[n].value,a=t[r].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(o,a,function(e,t){e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML())})},resetRestaurants=function(e){self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers&&self.markers.forEach(function(e){return e.setMap(null)}),self.markers=[],self.restaurants=e},fillRestaurantsHTML=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurants,t=document.getElementById("restaurants-list"),n=document.createComment("");e.forEach(function(e){t.append(createRestaurantHTML(e)),t.append(n)}),addMarkersToMap()},createRestaurantHTML=function(n){var e=document.createElement("li"),r=document.createElement("button");r.innerHTML="❤",r.classList.add("favButton"),changeFavStatus(r,n.is_favorite),r.onclick=function(){"true"===n.is_favorite?n.is_favorite="false":"false"===n.is_favorite&&(n.is_favorite="true"),DBHelper.changeFavoriteStateForRestaurant(n.id,n.is_favorite,function(e,t){e?console.log(e):(console.log(t),changeFavStatus(r,n.is_favorite))})},e.append(r);var t=document.createElement("img");t.className="restaurant-img";var o=DBHelper.imageUrlForRestaurant(n),a="webp";t.src=o+"-800_2x."+a,t.setAttribute("srcset",o+"-800_2x."+a+" 800w, "+o+"-400_1x."+a+" 400w"),t.setAttribute("sizes","(max-width: 500px) 90vw, (max-width: 880px) 80vw, (max-width: 1205px) 40vw, (min-width: 1206px) 30vw"),t.setAttribute("alt",n.name+" Restaurant"),e.append(t);var i=document.createElement("div");i.className="restaurant-text-area",e.append(i);var s=document.createElement("h1");s.innerHTML=n.name,i.append(s);var u=document.createElement("p");u.innerHTML=n.neighborhood,i.append(u);var c=document.createElement("p");c.innerHTML=n.address,i.append(c);var l=document.createElement("a");return l.innerHTML="View Details",l.href=DBHelper.urlForRestaurant(n),l.setAttribute("role","button"),l.setAttribute("aria-label","View Restaurant Details"),i.append(l),e},addMarkersToMap=function(){(0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurants).forEach(function(e){var t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",function(){window.location.href=t.url}),self.markers.push(t)})},changeFavStatus=function(e,t){"true"===t?(e.classList.remove("notFav"),e.classList.add("fav"),e.setAttribute("aria-label","mark as favorite")):"false"===t&&(e.classList.remove("fav"),e.classList.add("notFav"),e.setAttribute("aria-label","remove as favorite"))};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
